version: '3'

env:
  MICROPYTHON_VERSION: 1.24.0

tasks:
  deps:
    desc: Install development requirements
    sources:
      - requirements-dev.txt
    status:
      - test -f /tmp/.pip-freeze
      - diff -q /tmp/.pip-freeze <(pip freeze)
    cmds:
      - pip install -r requirements-dev.txt
      - pip freeze > /tmp/.pip-freeze

  fmt:
    desc: Format code
    cmds:
      - black ./src ./util

  check-fmt:
    desc: Check code formatting
    cmds:
      - black --check ./src ./util

  lint:
    desc: Lint code, excluding the lib directory
    cmds:
      - flake8 --exclude=.venv,lib --ignore=E501

  test:
    desc: Run tests
    cmds:
      - pytest

  deploy:
    desc: Deploy code to the ESP32
    deps:
      - deps
      - lib
    vars:
      USB_PORT:
        # list /dev/ttyUSB* devices. If just one device is connected, it will be selected by default.
        # otherwise, the user will be prompted to select one via the USB_PORT environment variable.
        sh: python util/choose_device.py
    cmds:
      # clear the files on the ESP32, excluding the key_store.db
      - ampy -p {{.USB_PORT}} run ./src/tree.py
      - ampy -p {{.USB_PORT}} ls | grep -v /key_store.db > /tmp/ampy-ls.txt
      - cat /tmp/ampy-ls.txt | while read line; do echo $line | tee /dev/stdout | (grep -q "\." && ampy -p {{.USB_PORT}} rm $line || ampy -p {{.USB_PORT}} rmdir $line); done
      - rm /tmp/ampy-ls.txt

      # cross-compile all the .py files and prepare the dist directory
      - find ./src -name '*.py' | grep -v "boot.py" | grep -v "main.py" | grep -v "test_" | xargs -n 1 mpy-cross
      - mkdir -p ./dist && rm -rf ./dist/*
      - find ./src -mindepth 1 -type d | sed 's|src|dist|' | xargs mkdir -p
      - find ./src -name '*.mpy' -print0 | xargs -0 -I {} sh -c 'mkdir -p $(dirname {}) && mv {} $(echo {} | sed "s|src|dist|")'
      # boot.py and main.py cannot be cross-compiled
      - cp ./src/boot.py ./dist/
      - cp ./src/main.py ./dist/
      - cp -r ./www ./dist/

      # copy configuration
      - cp config.json ./dist/

      # upload the files to the ESP32
      - find dist -mindepth 1 -maxdepth 1 -exec ampy -p {{.USB_PORT}} put {} \;
      - ampy -p {{.USB_PORT}} run src/tree.py
      - ampy -p {{.USB_PORT}} reset
    defer:
      - find ./src -name '*.mpy' | xargs rm

  get-micropython-image:
    desc: Get the latest MicroPython image
    status:
      - test -f micropython/ESP32_GENERIC-20241129-v1.24.1.bin
    cmds:
      - mkdir -p micropython
      - wget https://micropython.org/resources/firmware/ESP32_GENERIC-20241129-v1.24.1.bin -O micropython/ESP32_GENERIC-20241129-v1.24.1.bin

  flash-micropython:
    deps:
      - get-micropython-image
    cmds:
      - esptool.py --chip esp32 --baud 460800 write_flash -ez 0x1000 micropython/ESP32_GENERIC-20241129-v1.24.1.bin

  lib:
    desc: Get the libraries
    cmds:
      - task mkdir-lib
      - task lib-microwebsrv
      - task lib-bme280
      - task lib-ens160

  mkdir-lib:
    desc: Create the lib directory
    status:
      - test -d src/lib
    cmds:
      - mkdir -p src/lib

  lib-microwebsrv:
    desc: Get the MicroWebSrv library
    dir: src/lib
    deps:
      - mkdir-lib
    status:
      - test -f microWebSrv.py
      - test -f microWebSocket.py
      - test -f microWebTemplate.py
    cmds:
      - wget -qnc https://raw.githubusercontent.com/jczic/MicroWebSrv/9909b830792d5d06cd1c34dce50985b3291eb0da/microWebSrv.py
      - wget -qnc https://raw.githubusercontent.com/jczic/MicroWebSrv/9909b830792d5d06cd1c34dce50985b3291eb0da/microWebSocket.py
      - wget -qnc https://raw.githubusercontent.com/jczic/MicroWebSrv/9909b830792d5d06cd1c34dce50985b3291eb0da/microWebTemplate.py

  lib-bme280:
    desc: Get the BME280 library for ESP32 MicroPython by Rui Santos.
    dir: src/lib
    deps:
      - mkdir-lib
    status:
      - test -f BME280.py
    cmds:
      - wget -qnc https://raw.githubusercontent.com/RuiSantosdotme/ESP-MicroPython/5f75275fd5b9d4cac1b62bbce058b9771e436f3e/code/WiFi/HTTP_Client_IFTTT_BME280/BME280.py

  lib-ens160:
    desc: Get the ENS160 library for ESP32 MicroPython by JustDr00py.
    dir: src/lib
    deps:
      - mkdir-lib
    status:
      - test -f ens160.py
    cmds:
      - wget -qnc https://raw.githubusercontent.com/JustDr00py/ens160-aht21/b7630e692a5e93beb16c6daf451af3fcd094e77c/lib/ens160.py

  help:
    desc: Show help
    cmds:
      - task --list